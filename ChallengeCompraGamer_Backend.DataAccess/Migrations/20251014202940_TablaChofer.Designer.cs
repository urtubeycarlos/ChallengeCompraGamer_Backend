// <auto-generated />
using System;
using ChallengeCompraGamer_Backend.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChallengeCompraGamer_Backend.DataAccess.Migrations
{
    [DbContext(typeof(ChallengeCompraGamerContext))]
    [Migration("20251014202940_TablaChofer")]
    partial class TablaChofer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ChallengeCompraGamer_Backend.DataAccess.Entities.Chofer", b =>
                {
                    b.Property<string>("DNI")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("dni");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("apellido");

                    b.Property<string>("ClaseLicencia")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("clase_licencia");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("nombre");

                    b.Property<int>("Telefono")
                        .HasMaxLength(16)
                        .HasColumnType("int")
                        .HasColumnName("telefono");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("DNI");

                    b.ToTable("chofer", (string)null);
                });

            modelBuilder.Entity("ChallengeCompraGamer_Backend.DataAccess.Entities.Micro", b =>
                {
                    b.Property<string>("Patente")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("patente");

                    b.Property<string>("ChoferDNI")
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(3)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.HasKey("Patente");

                    b.HasIndex("ChoferDNI")
                        .IsUnique();

                    b.ToTable("micro", (string)null);
                });

            modelBuilder.Entity("ChallengeCompraGamer_Backend.DataAccess.Entities.Micro", b =>
                {
                    b.HasOne("ChallengeCompraGamer_Backend.DataAccess.Entities.Chofer", "Chofer")
                        .WithOne("Micro")
                        .HasForeignKey("ChallengeCompraGamer_Backend.DataAccess.Entities.Micro", "ChoferDNI")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Chofer");
                });

            modelBuilder.Entity("ChallengeCompraGamer_Backend.DataAccess.Entities.Chofer", b =>
                {
                    b.Navigation("Micro");
                });
#pragma warning restore 612, 618
        }
    }
}
